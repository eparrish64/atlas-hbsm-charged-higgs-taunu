#! /usr/bin/env python
"""
simple script for submitting jobs to a cluster.
"""
import tensorflow as tf
import keras
print("Keras version: " + keras.__version__)
print("TensorFlow version: " + tf.version.VERSION)
from keras import backend as K
K.tensorflow_backend._get_available_gpus()
from tensorflow.python.client import device_lib
print(device_lib.list_local_devices())
print("GPU Available: ", tf.test.is_gpu_available())
print("Num GPUs Available: ", len(tf.config.experimental.list_physical_devices('GPU')))
 
if __name__=="__main__":
        import sys, os
        import socket
        import time
        import cPickle

        from hpana.mva.classifier import train_model

        if 'cedar' in socket.gethostname():
            jobname = os.getenv("SLURM_JOB_NAME")
        elif 'niu' in socket.gethostname() or 'cern' in socket.gethostname():
            jobname = sys.argv[1]
        else:
            jobname = os.getenv("PBS_JOBNAME")

        with open(sys.argv[1], "rb") as pfile:
                model = cPickle.load(pfile)
        
        print "Model: ", model 

        # - - get the hists 
        start_time = time.time()
        train_model(model, outdir="./", weight_sample=False, scale_features=False, balanced=sys.argv[2])
        end_time = time.time()
        print "Execution Time:\t  %0.2f"%(end_time - start_time)
