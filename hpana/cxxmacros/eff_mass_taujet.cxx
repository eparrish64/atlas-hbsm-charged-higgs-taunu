//             This is an effective mass reweighting for ttbar - from fit
//             To be used for the tau+jets channel!
//             in a the lookup table form (after compactification)
float eff_mass_taujet(float eff_m,int var){
	 //! xmin:  0.0 
	 //! xmax: 3000.0 
	 //! npoints: 100 
	 int i = static_cast<int>(100*(eff_m -  0.0)/(3000.0 -  0.0)); 
	 if ( i < 0 || i > 100 ) i=100; 

		 //! NOMINAL 
		 if(var==0 || var==1){
			 float SF_temp[102] = { 
0.638, 0.674, 0.707, 0.736, 0.762, 0.784, 0.804, 0.822, 0.837, 0.849, 0.860, 0.869, 0.877, 0.882, 0.887, 0.890, 0.892, 0.893, 0.893, 0.893, 0.891, 0.889, 0.886, 0.883, 0.879, 0.875, 0.871, 0.866, 0.861, 0.856, 0.850, 0.844, 0.838, 0.833, 0.827, 0.820, 0.814, 0.808, 0.802, 0.796, 0.790, 0.784, 0.778, 0.772, 0.766, 0.761, 0.755, 0.749, 0.744, 0.739, 0.733, 0.728, 0.723, 0.718, 0.714, 0.709, 0.704, 0.700, 0.696, 0.691, 0.687, 0.683, 0.680, 0.676, 0.672, 0.669, 0.665, 0.662, 0.659, 0.656, 0.653, 0.650, 0.647, 0.644, 0.642, 0.639, 0.637, 0.634, 0.632, 0.630, 0.628, 0.626, 0.624, 0.622, 0.620, 0.618, 0.616, 0.615, 0.613, 0.612, 0.610, 0.609, 0.607, 0.606, 0.605, 0.604, 0.602, 0.601, 0.600, 0.599, 0.598, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! full variation UP
		 if(var==2){
			 float SF_temp[102] = { 
0.761, 0.796, 0.826, 0.853, 0.876, 0.896, 0.912, 0.927, 0.938, 0.948, 0.955, 0.961, 0.965, 0.968, 0.969, 0.969, 0.968, 0.967, 0.964, 0.961, 0.958, 0.954, 0.949, 0.944, 0.939, 0.934, 0.928, 0.922, 0.916, 0.910, 0.903, 0.897, 0.890, 0.884, 0.877, 0.871, 0.865, 0.858, 0.852, 0.846, 0.840, 0.835, 0.829, 0.824, 0.818, 0.813, 0.808, 0.804, 0.799, 0.795, 0.791, 0.787, 0.783, 0.779, 0.776, 0.772, 0.769, 0.766, 0.763, 0.760, 0.757, 0.754, 0.752, 0.749, 0.747, 0.745, 0.743, 0.741, 0.739, 0.737, 0.735, 0.733, 0.732, 0.730, 0.728, 0.727, 0.726, 0.724, 0.723, 0.722, 0.721, 0.720, 0.719, 0.718, 0.717, 0.716, 0.715, 0.715, 0.714, 0.713, 0.712, 0.712, 0.711, 0.711, 0.710, 0.710, 0.709, 0.709, 0.708, 0.708, 0.707, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! full variation DOWN
		 if(var==3){
			 float SF_temp[102] = { 
0.506, 0.545, 0.580, 0.612, 0.641, 0.666, 0.688, 0.709, 0.726, 0.742, 0.755, 0.766, 0.776, 0.784, 0.790, 0.795, 0.799, 0.802, 0.803, 0.804, 0.804, 0.803, 0.801, 0.799, 0.796, 0.792, 0.788, 0.784, 0.779, 0.774, 0.768, 0.763, 0.757, 0.751, 0.745, 0.738, 0.732, 0.726, 0.719, 0.713, 0.707, 0.700, 0.694, 0.688, 0.682, 0.676, 0.670, 0.664, 0.658, 0.652, 0.647, 0.641, 0.636, 0.631, 0.625, 0.620, 0.615, 0.610, 0.606, 0.601, 0.596, 0.592, 0.587, 0.583, 0.578, 0.574, 0.570, 0.566, 0.562, 0.559, 0.555, 0.551, 0.548, 0.544, 0.541, 0.538, 0.534, 0.531, 0.528, 0.525, 0.523, 0.520, 0.517, 0.514, 0.512, 0.509, 0.507, 0.505, 0.502, 0.500, 0.498, 0.496, 0.494, 0.492, 0.490, 0.488, 0.487, 0.485, 0.483, 0.482, 0.480, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! nominal for HERWIG PS 
		 if(var==1001){
			 float SF_temp[102] = { 
0.715, 0.759, 0.798, 0.833, 0.865, 0.893, 0.918, 0.940, 0.959, 0.975, 0.989, 1.001, 1.012, 1.020, 1.026, 1.032, 1.035, 1.038, 1.039, 1.039, 1.039, 1.037, 1.035, 1.032, 1.028, 1.024, 1.019, 1.014, 1.008, 1.002, 0.996, 0.990, 0.983, 0.976, 0.970, 0.962, 0.955, 0.948, 0.941, 0.934, 0.926, 0.919, 0.912, 0.905, 0.898, 0.891, 0.884, 0.877, 0.870, 0.863, 0.857, 0.850, 0.844, 0.838, 0.832, 0.826, 0.820, 0.814, 0.809, 0.803, 0.798, 0.793, 0.788, 0.783, 0.778, 0.773, 0.769, 0.765, 0.760, 0.756, 0.752, 0.748, 0.744, 0.741, 0.737, 0.734, 0.730, 0.727, 0.724, 0.721, 0.718, 0.715, 0.712, 0.710, 0.707, 0.705, 0.702, 0.700, 0.698, 0.696, 0.693, 0.691, 0.690, 0.688, 0.686, 0.684, 0.682, 0.681, 0.679, 0.678, 0.676, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! nominal for ISR 1up 
		 if(var==1002){
			 float SF_temp[102] = { 
0.483, 0.539, 0.587, 0.629, 0.666, 0.697, 0.724, 0.746, 0.765, 0.780, 0.792, 0.802, 0.808, 0.813, 0.815, 0.816, 0.815, 0.813, 0.810, 0.805, 0.800, 0.793, 0.786, 0.779, 0.771, 0.762, 0.753, 0.744, 0.735, 0.726, 0.716, 0.706, 0.697, 0.687, 0.678, 0.668, 0.659, 0.650, 0.641, 0.632, 0.623, 0.614, 0.606, 0.598, 0.590, 0.582, 0.574, 0.567, 0.560, 0.553, 0.546, 0.540, 0.533, 0.527, 0.521, 0.516, 0.510, 0.505, 0.500, 0.495, 0.490, 0.486, 0.481, 0.477, 0.473, 0.469, 0.465, 0.462, 0.458, 0.455, 0.452, 0.449, 0.446, 0.443, 0.441, 0.438, 0.436, 0.433, 0.431, 0.429, 0.427, 0.425, 0.423, 0.421, 0.420, 0.418, 0.417, 0.415, 0.414, 0.412, 0.411, 0.410, 0.409, 0.408, 0.407, 0.406, 0.405, 0.404, 0.403, 0.402, 0.401, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! nominal for ISR 1down 
		 if(var==1003){
			 float SF_temp[102] = { 
0.908, 0.922, 0.934, 0.945, 0.955, 0.963, 0.971, 0.978, 0.983, 0.988, 0.992, 0.996, 0.999, 1.001, 1.003, 1.004, 1.005, 1.005, 1.005, 1.005, 1.005, 1.004, 1.003, 1.002, 1.000, 0.999, 0.997, 0.995, 0.993, 0.991, 0.989, 0.987, 0.985, 0.983, 0.980, 0.978, 0.976, 0.973, 0.971, 0.969, 0.967, 0.964, 0.962, 0.960, 0.958, 0.955, 0.953, 0.951, 0.949, 0.947, 0.945, 0.943, 0.941, 0.939, 0.938, 0.936, 0.934, 0.932, 0.931, 0.929, 0.927, 0.926, 0.924, 0.923, 0.922, 0.920, 0.919, 0.918, 0.917, 0.915, 0.914, 0.913, 0.912, 0.911, 0.910, 0.909, 0.908, 0.907, 0.906, 0.905, 0.905, 0.904, 0.903, 0.902, 0.902, 0.901, 0.900, 0.900, 0.899, 0.898, 0.898, 0.897, 0.897, 0.896, 0.896, 0.895, 0.895, 0.894, 0.894, 0.894, 0.893, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! nominal for FSR 1up 
		 if(var==1004){
			 float SF_temp[102] = { 
0.616, 0.653, 0.686, 0.716, 0.742, 0.765, 0.785, 0.803, 0.818, 0.831, 0.842, 0.851, 0.859, 0.865, 0.869, 0.872, 0.874, 0.876, 0.876, 0.875, 0.874, 0.871, 0.869, 0.865, 0.862, 0.857, 0.853, 0.848, 0.843, 0.837, 0.832, 0.826, 0.820, 0.814, 0.808, 0.802, 0.795, 0.789, 0.783, 0.777, 0.771, 0.765, 0.759, 0.753, 0.747, 0.741, 0.735, 0.730, 0.724, 0.719, 0.713, 0.708, 0.703, 0.698, 0.693, 0.688, 0.684, 0.679, 0.675, 0.671, 0.666, 0.662, 0.659, 0.655, 0.651, 0.647, 0.644, 0.641, 0.637, 0.634, 0.631, 0.628, 0.625, 0.623, 0.620, 0.617, 0.615, 0.613, 0.610, 0.608, 0.606, 0.604, 0.602, 0.600, 0.598, 0.596, 0.594, 0.593, 0.591, 0.590, 0.588, 0.587, 0.585, 0.584, 0.583, 0.581, 0.580, 0.579, 0.578, 0.577, 0.576, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! nominal for FSR 1down 
		 if(var==1005){
			 float SF_temp[102] = { 
0.550, 0.597, 0.640, 0.679, 0.715, 0.746, 0.775, 0.800, 0.822, 0.842, 0.860, 0.875, 0.888, 0.899, 0.908, 0.915, 0.921, 0.926, 0.929, 0.931, 0.932, 0.932, 0.931, 0.930, 0.927, 0.924, 0.920, 0.916, 0.911, 0.906, 0.900, 0.894, 0.888, 0.881, 0.874, 0.867, 0.860, 0.852, 0.845, 0.837, 0.830, 0.822, 0.814, 0.806, 0.799, 0.791, 0.783, 0.776, 0.768, 0.761, 0.753, 0.746, 0.739, 0.731, 0.724, 0.717, 0.711, 0.704, 0.697, 0.691, 0.684, 0.678, 0.672, 0.666, 0.660, 0.655, 0.649, 0.644, 0.638, 0.633, 0.628, 0.623, 0.618, 0.614, 0.609, 0.605, 0.600, 0.596, 0.592, 0.588, 0.584, 0.581, 0.577, 0.573, 0.570, 0.567, 0.563, 0.560, 0.557, 0.554, 0.551, 0.549, 0.546, 0.543, 0.541, 0.538, 0.536, 0.534, 0.531, 0.529, 0.527, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 if (var!=-1) std::cout << "eff_mass SF ERROR:   Unrecognized variation index! " << var << std::endl; 
		 return 1.0; 
 }; 
 
