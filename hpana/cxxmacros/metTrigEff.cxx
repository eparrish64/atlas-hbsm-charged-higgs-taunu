//   CAREFUL!  This is a MonteCarlo Scale Factor data file!
//             Use together with MC trigger decision!
float metTrigEff(float met_et, int variation_index, int run_number){
	 //! xmin: 50.0 
	 //! xmax: 250.0 
	 //! npoints: 100 
	 int i = static_cast<int>(100*(met_et - 50.0)/(250.0 - 50.0)); 
	 if ( i < 0 || i > 100 ) i=100; 

	 // year: 2015 
	 // trigger: 2015_HLT_xe70_mht || xe70_tc_lcw 
	 if(run_number >= 266904 && run_number <= 284484){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.875, 0.879, 0.883, 0.887, 0.891, 0.895, 0.899, 0.902, 0.906, 0.910, 0.913, 0.917, 0.920, 0.924, 0.927, 0.930, 0.933, 0.937, 0.940, 0.942, 0.945, 0.948, 0.951, 0.953, 0.956, 0.958, 0.961, 0.963, 0.965, 0.968, 0.970, 0.972, 0.973, 0.975, 0.977, 0.979, 0.980, 0.982, 0.983, 0.984, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
0.941, 0.941, 0.941, 0.941, 0.942, 0.943, 0.945, 0.947, 0.950, 0.954, 0.959, 0.964, 0.969, 0.976, 0.984, 0.993, 1.001, 1.010, 1.018, 1.025, 1.032, 1.038, 1.044, 1.049, 1.053, 1.057, 1.060, 1.062, 1.064, 1.066, 1.066, 1.067, 1.067, 1.066, 1.065, 1.064, 1.062, 1.061, 1.059, 1.057, 1.054, 1.052, 1.049, 1.047, 1.044, 1.041, 1.039, 1.036, 1.034, 1.031, 1.029, 1.026, 1.024, 1.022, 1.020, 1.018, 1.017, 1.015, 1.014, 1.012, 1.011, 1.010, 1.009, 1.008, 1.007, 1.006, 1.005, 1.005, 1.004, 1.004, 1.003, 1.003, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.723, 0.743, 0.762, 0.781, 0.799, 0.817, 0.833, 0.849, 0.864, 0.878, 0.890, 0.899, 0.903, 0.907, 0.910, 0.914, 0.917, 0.920, 0.923, 0.925, 0.927, 0.930, 0.932, 0.934, 0.936, 0.938, 0.939, 0.941, 0.943, 0.945, 0.947, 0.949, 0.951, 0.953, 0.955, 0.957, 0.959, 0.961, 0.963, 0.965, 0.967, 0.968, 0.970, 0.972, 0.974, 0.975, 0.977, 0.978, 0.980, 0.981, 0.983, 0.984, 0.985, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.919, 0.921, 0.923, 0.925, 0.928, 0.931, 0.934, 0.938, 0.942, 0.946, 0.950, 0.954, 0.958, 0.962, 0.966, 0.970, 0.974, 0.978, 0.981, 0.985, 0.988, 0.990, 0.993, 0.996, 0.998, 1.000, 1.002, 1.003, 1.005, 1.006, 1.007, 1.008, 1.009, 1.010, 1.010, 1.010, 1.011, 1.011, 1.011, 1.011, 1.011, 1.010, 1.010, 1.010, 1.009, 1.009, 1.009, 1.008, 1.008, 1.007, 1.007, 1.006, 1.006, 1.005, 1.005, 1.004, 1.004, 1.004, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.829, 0.836, 0.842, 0.848, 0.853, 0.858, 0.863, 0.867, 0.871, 0.875, 0.879, 0.882, 0.885, 0.889, 0.892, 0.894, 0.897, 0.900, 0.903, 0.906, 0.908, 0.911, 0.914, 0.916, 0.919, 0.922, 0.924, 0.927, 0.929, 0.932, 0.935, 0.937, 0.940, 0.942, 0.945, 0.947, 0.950, 0.952, 0.955, 0.957, 0.959, 0.962, 0.964, 0.966, 0.968, 0.970, 0.972, 0.974, 0.976, 0.977, 0.979, 0.981, 0.982, 0.984, 0.985, 0.986, 0.987, 0.989, 0.990, 0.991, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 // year: 2016 
	 // trigger: 2016_HLT_xe90_mht || xe70_tc_lcw_L1XE50 
	 if(run_number >= 296939 && run_number <= 302872){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.858, 0.858, 0.859, 0.860, 0.860, 0.861, 0.862, 0.864, 0.865, 0.866, 0.868, 0.870, 0.871, 0.873, 0.875, 0.877, 0.880, 0.882, 0.884, 0.887, 0.889, 0.892, 0.894, 0.897, 0.900, 0.903, 0.906, 0.909, 0.912, 0.915, 0.918, 0.921, 0.924, 0.927, 0.930, 0.933, 0.936, 0.939, 0.942, 0.945, 0.948, 0.950, 0.953, 0.956, 0.959, 0.961, 0.964, 0.966, 0.968, 0.971, 0.973, 0.975, 0.977, 0.979, 0.980, 0.982, 0.984, 0.985, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
1.012, 0.999, 0.987, 0.976, 0.966, 0.957, 0.948, 0.940, 0.933, 0.926, 0.921, 0.916, 0.913, 0.911, 0.909, 0.910, 0.911, 0.912, 0.914, 0.915, 0.917, 0.919, 0.921, 0.923, 0.925, 0.927, 0.929, 0.932, 0.934, 0.936, 0.939, 0.941, 0.943, 0.946, 0.948, 0.951, 0.953, 0.955, 0.958, 0.960, 0.962, 0.964, 0.967, 0.969, 0.971, 0.973, 0.975, 0.976, 0.978, 0.980, 0.981, 0.983, 0.984, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.847, 0.849, 0.851, 0.854, 0.856, 0.858, 0.861, 0.863, 0.865, 0.866, 0.868, 0.870, 0.871, 0.873, 0.875, 0.877, 0.876, 0.873, 0.870, 0.867, 0.865, 0.864, 0.862, 0.862, 0.861, 0.861, 0.861, 0.862, 0.862, 0.864, 0.865, 0.867, 0.868, 0.871, 0.873, 0.875, 0.878, 0.881, 0.884, 0.887, 0.891, 0.894, 0.898, 0.902, 0.905, 0.909, 0.913, 0.917, 0.920, 0.924, 0.928, 0.932, 0.936, 0.939, 0.943, 0.946, 0.950, 0.953, 0.956, 0.959, 0.962, 0.965, 0.968, 0.970, 0.973, 0.975, 0.977, 0.979, 0.981, 0.983, 0.984, 0.986, 0.987, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.901, 0.899, 0.897, 0.896, 0.895, 0.894, 0.894, 0.894, 0.894, 0.895, 0.897, 0.898, 0.900, 0.902, 0.904, 0.907, 0.909, 0.912, 0.915, 0.917, 0.920, 0.923, 0.926, 0.929, 0.932, 0.935, 0.938, 0.941, 0.943, 0.946, 0.949, 0.952, 0.954, 0.957, 0.959, 0.962, 0.964, 0.966, 0.968, 0.970, 0.972, 0.974, 0.976, 0.978, 0.980, 0.981, 0.983, 0.984, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.814, 0.817, 0.820, 0.823, 0.825, 0.828, 0.830, 0.833, 0.835, 0.837, 0.839, 0.841, 0.844, 0.846, 0.848, 0.850, 0.852, 0.854, 0.856, 0.858, 0.861, 0.863, 0.866, 0.868, 0.871, 0.874, 0.877, 0.879, 0.882, 0.886, 0.889, 0.892, 0.895, 0.899, 0.902, 0.905, 0.909, 0.912, 0.916, 0.919, 0.923, 0.926, 0.930, 0.933, 0.937, 0.940, 0.943, 0.946, 0.950, 0.953, 0.956, 0.959, 0.961, 0.964, 0.967, 0.969, 0.972, 0.974, 0.976, 0.978, 0.980, 0.982, 0.983, 0.985, 0.986, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 // year: 2016 
	 // trigger: 2016_HLT_xe110_mht_L1XE50 
	 if(run_number >= 302873 && run_number <= 311481){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.674, 0.681, 0.688, 0.694, 0.701, 0.707, 0.714, 0.721, 0.727, 0.734, 0.740, 0.747, 0.753, 0.760, 0.766, 0.772, 0.779, 0.785, 0.791, 0.797, 0.804, 0.810, 0.816, 0.822, 0.828, 0.834, 0.840, 0.845, 0.851, 0.857, 0.862, 0.868, 0.873, 0.879, 0.884, 0.889, 0.894, 0.899, 0.904, 0.908, 0.913, 0.918, 0.922, 0.926, 0.930, 0.934, 0.938, 0.942, 0.946, 0.949, 0.952, 0.956, 0.959, 0.962, 0.964, 0.967, 0.970, 0.972, 0.974, 0.977, 0.979, 0.980, 0.982, 0.984, 0.985, 0.987, 0.988, 0.989, 0.990, 0.992, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
0.695, 0.701, 0.708, 0.714, 0.720, 0.726, 0.732, 0.739, 0.745, 0.751, 0.757, 0.763, 0.769, 0.776, 0.782, 0.789, 0.796, 0.802, 0.809, 0.816, 0.823, 0.829, 0.836, 0.843, 0.849, 0.856, 0.862, 0.868, 0.875, 0.881, 0.887, 0.893, 0.899, 0.905, 0.911, 0.917, 0.923, 0.928, 0.934, 0.939, 0.944, 0.948, 0.953, 0.957, 0.961, 0.965, 0.968, 0.971, 0.974, 0.977, 0.980, 0.982, 0.985, 0.987, 0.989, 0.990, 0.992, 0.993, 0.994, 0.996, 0.996, 0.997, 0.998, 0.999, 0.999, 1.000, 1.000, 1.000, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.568, 0.580, 0.591, 0.602, 0.613, 0.624, 0.636, 0.647, 0.657, 0.668, 0.679, 0.689, 0.700, 0.710, 0.720, 0.730, 0.740, 0.750, 0.760, 0.769, 0.778, 0.787, 0.796, 0.804, 0.812, 0.819, 0.826, 0.832, 0.838, 0.844, 0.850, 0.855, 0.861, 0.866, 0.871, 0.877, 0.882, 0.887, 0.892, 0.897, 0.901, 0.906, 0.911, 0.915, 0.920, 0.924, 0.928, 0.932, 0.936, 0.940, 0.943, 0.947, 0.950, 0.954, 0.957, 0.960, 0.963, 0.965, 0.968, 0.970, 0.973, 0.975, 0.977, 0.979, 0.981, 0.983, 0.984, 0.986, 0.987, 0.988, 0.989, 0.991, 0.992, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.717, 0.722, 0.726, 0.731, 0.736, 0.740, 0.745, 0.750, 0.755, 0.760, 0.765, 0.770, 0.776, 0.781, 0.787, 0.792, 0.798, 0.803, 0.809, 0.815, 0.821, 0.827, 0.833, 0.840, 0.846, 0.852, 0.858, 0.864, 0.870, 0.876, 0.882, 0.887, 0.893, 0.898, 0.904, 0.909, 0.914, 0.919, 0.924, 0.928, 0.933, 0.937, 0.941, 0.945, 0.949, 0.953, 0.956, 0.960, 0.963, 0.966, 0.968, 0.971, 0.974, 0.976, 0.978, 0.980, 0.982, 0.984, 0.986, 0.987, 0.988, 0.990, 0.991, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.631, 0.640, 0.649, 0.657, 0.666, 0.674, 0.682, 0.691, 0.699, 0.707, 0.715, 0.723, 0.730, 0.738, 0.745, 0.752, 0.760, 0.766, 0.773, 0.780, 0.786, 0.792, 0.799, 0.805, 0.811, 0.816, 0.822, 0.828, 0.833, 0.839, 0.844, 0.849, 0.855, 0.860, 0.865, 0.870, 0.875, 0.880, 0.885, 0.889, 0.894, 0.899, 0.903, 0.908, 0.912, 0.916, 0.921, 0.925, 0.929, 0.933, 0.936, 0.940, 0.944, 0.947, 0.951, 0.954, 0.957, 0.960, 0.963, 0.965, 0.968, 0.970, 0.973, 0.975, 0.977, 0.979, 0.981, 0.983, 0.984, 0.986, 0.987, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 // year: 2017 
	 // trigger: 2017_HLT_xe110_pufit_L1XE55 
	 if(run_number >= 325713 && run_number <= 331975){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.732, 0.740, 0.747, 0.754, 0.762, 0.769, 0.776, 0.783, 0.790, 0.797, 0.803, 0.810, 0.817, 0.823, 0.829, 0.836, 0.842, 0.848, 0.854, 0.860, 0.866, 0.871, 0.877, 0.882, 0.888, 0.893, 0.898, 0.903, 0.908, 0.913, 0.917, 0.922, 0.926, 0.930, 0.934, 0.938, 0.942, 0.945, 0.949, 0.952, 0.955, 0.959, 0.962, 0.964, 0.967, 0.970, 0.972, 0.974, 0.977, 0.979, 0.981, 0.982, 0.984, 0.986, 0.987, 0.988, 0.990, 0.991, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
0.977, 0.975, 0.972, 0.969, 0.967, 0.965, 0.962, 0.960, 0.958, 0.956, 0.955, 0.953, 0.951, 0.950, 0.949, 0.947, 0.946, 0.945, 0.945, 0.944, 0.944, 0.943, 0.943, 0.943, 0.944, 0.945, 0.946, 0.948, 0.950, 0.952, 0.955, 0.959, 0.962, 0.966, 0.970, 0.974, 0.979, 0.983, 0.987, 0.991, 0.994, 0.998, 1.001, 1.004, 1.006, 1.009, 1.011, 1.013, 1.014, 1.016, 1.017, 1.018, 1.019, 1.019, 1.020, 1.020, 1.020, 1.020, 1.020, 1.020, 1.019, 1.019, 1.018, 1.018, 1.017, 1.016, 1.016, 1.015, 1.014, 1.013, 1.013, 1.012, 1.011, 1.010, 1.010, 1.009, 1.008, 1.007, 1.007, 1.006, 1.006, 1.005, 1.005, 1.004, 1.004, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.628, 0.640, 0.653, 0.665, 0.677, 0.689, 0.701, 0.713, 0.724, 0.736, 0.747, 0.758, 0.769, 0.779, 0.789, 0.799, 0.808, 0.817, 0.825, 0.833, 0.841, 0.848, 0.855, 0.861, 0.867, 0.873, 0.878, 0.884, 0.889, 0.895, 0.900, 0.905, 0.909, 0.913, 0.917, 0.921, 0.925, 0.928, 0.932, 0.935, 0.938, 0.941, 0.943, 0.946, 0.948, 0.950, 0.952, 0.954, 0.956, 0.958, 0.960, 0.961, 0.963, 0.965, 0.967, 0.969, 0.970, 0.972, 0.974, 0.975, 0.977, 0.978, 0.980, 0.981, 0.982, 0.984, 0.985, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.827, 0.830, 0.833, 0.836, 0.839, 0.842, 0.846, 0.849, 0.852, 0.856, 0.859, 0.863, 0.866, 0.870, 0.874, 0.878, 0.882, 0.886, 0.890, 0.894, 0.899, 0.903, 0.908, 0.913, 0.918, 0.923, 0.928, 0.933, 0.939, 0.944, 0.949, 0.954, 0.958, 0.963, 0.967, 0.971, 0.975, 0.979, 0.983, 0.986, 0.989, 0.992, 0.995, 0.997, 1.000, 1.002, 1.003, 1.005, 1.006, 1.008, 1.009, 1.010, 1.010, 1.011, 1.011, 1.012, 1.012, 1.012, 1.012, 1.012, 1.011, 1.011, 1.011, 1.010, 1.010, 1.009, 1.009, 1.008, 1.008, 1.007, 1.007, 1.006, 1.006, 1.005, 1.005, 1.004, 1.004, 1.004, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.638, 0.649, 0.660, 0.672, 0.683, 0.694, 0.705, 0.715, 0.726, 0.736, 0.746, 0.756, 0.766, 0.775, 0.785, 0.793, 0.802, 0.810, 0.818, 0.825, 0.832, 0.839, 0.846, 0.852, 0.858, 0.863, 0.868, 0.873, 0.878, 0.883, 0.887, 0.892, 0.896, 0.900, 0.903, 0.907, 0.911, 0.914, 0.918, 0.921, 0.924, 0.928, 0.931, 0.934, 0.937, 0.940, 0.943, 0.945, 0.948, 0.951, 0.953, 0.956, 0.958, 0.961, 0.963, 0.965, 0.967, 0.969, 0.971, 0.973, 0.975, 0.977, 0.979, 0.980, 0.982, 0.983, 0.985, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 // year: 2017 
	 // trigger: 2017_HLT_xe110_pufit_L1XE50 
	 if(run_number >= 332303 && run_number <= 341649){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.733, 0.738, 0.744, 0.749, 0.755, 0.761, 0.766, 0.772, 0.777, 0.782, 0.788, 0.793, 0.798, 0.804, 0.809, 0.814, 0.819, 0.824, 0.829, 0.834, 0.839, 0.844, 0.849, 0.854, 0.858, 0.863, 0.868, 0.872, 0.877, 0.881, 0.885, 0.890, 0.894, 0.898, 0.902, 0.906, 0.910, 0.914, 0.917, 0.921, 0.925, 0.928, 0.931, 0.935, 0.938, 0.941, 0.944, 0.947, 0.950, 0.953, 0.955, 0.958, 0.960, 0.963, 0.965, 0.967, 0.969, 0.972, 0.973, 0.975, 0.977, 0.979, 0.980, 0.982, 0.983, 0.985, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
0.859, 0.861, 0.862, 0.864, 0.866, 0.867, 0.869, 0.871, 0.873, 0.875, 0.877, 0.879, 0.880, 0.882, 0.885, 0.887, 0.889, 0.891, 0.893, 0.895, 0.897, 0.899, 0.902, 0.904, 0.906, 0.909, 0.911, 0.914, 0.916, 0.919, 0.921, 0.924, 0.927, 0.929, 0.932, 0.935, 0.937, 0.940, 0.943, 0.946, 0.948, 0.951, 0.954, 0.956, 0.959, 0.961, 0.964, 0.966, 0.968, 0.971, 0.973, 0.975, 0.977, 0.979, 0.981, 0.983, 0.984, 0.986, 0.987, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.995, 0.995, 0.996, 0.997, 0.997, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.704, 0.712, 0.720, 0.727, 0.735, 0.742, 0.749, 0.756, 0.764, 0.771, 0.777, 0.784, 0.791, 0.798, 0.804, 0.811, 0.816, 0.821, 0.826, 0.830, 0.834, 0.838, 0.842, 0.847, 0.851, 0.855, 0.859, 0.863, 0.867, 0.871, 0.875, 0.879, 0.883, 0.887, 0.891, 0.894, 0.898, 0.902, 0.905, 0.909, 0.912, 0.916, 0.919, 0.923, 0.926, 0.929, 0.932, 0.936, 0.939, 0.942, 0.944, 0.947, 0.950, 0.953, 0.955, 0.958, 0.960, 0.963, 0.965, 0.967, 0.969, 0.971, 0.973, 0.975, 0.977, 0.978, 0.980, 0.981, 0.983, 0.984, 0.985, 0.986, 0.987, 0.989, 0.989, 0.990, 0.991, 0.992, 0.993, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.778, 0.782, 0.785, 0.789, 0.792, 0.796, 0.800, 0.804, 0.807, 0.811, 0.815, 0.819, 0.823, 0.827, 0.831, 0.835, 0.840, 0.844, 0.848, 0.853, 0.857, 0.862, 0.866, 0.871, 0.876, 0.880, 0.885, 0.890, 0.894, 0.899, 0.903, 0.908, 0.912, 0.917, 0.921, 0.925, 0.929, 0.933, 0.937, 0.941, 0.944, 0.948, 0.951, 0.954, 0.957, 0.960, 0.963, 0.966, 0.968, 0.971, 0.973, 0.975, 0.978, 0.980, 0.981, 0.983, 0.985, 0.986, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.994, 0.995, 0.996, 0.996, 0.997, 0.997, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.687, 0.694, 0.702, 0.710, 0.717, 0.725, 0.732, 0.739, 0.746, 0.753, 0.760, 0.767, 0.774, 0.780, 0.787, 0.793, 0.799, 0.805, 0.810, 0.816, 0.821, 0.827, 0.832, 0.837, 0.842, 0.846, 0.851, 0.855, 0.860, 0.864, 0.868, 0.872, 0.876, 0.880, 0.884, 0.888, 0.891, 0.895, 0.899, 0.902, 0.906, 0.909, 0.913, 0.916, 0.919, 0.923, 0.926, 0.929, 0.932, 0.935, 0.938, 0.941, 0.944, 0.946, 0.949, 0.952, 0.954, 0.957, 0.959, 0.961, 0.964, 0.966, 0.968, 0.970, 0.972, 0.974, 0.976, 0.977, 0.979, 0.980, 0.982, 0.983, 0.985, 0.986, 0.987, 0.988, 0.989, 0.990, 0.991, 0.992, 0.993, 0.993, 0.994, 0.995, 0.995, 0.996, 0.996, 0.997, 0.997, 0.997, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 // year: 2018 
	 // trigger: 2018_HLT_xe110_pufit_xe70_L1XE50 
	 if(run_number >= 348885 && run_number <= 364485){
		 if(variation_index==1000){
			 float SF_temp[102] = { 
0.691, 0.701, 0.711, 0.721, 0.730, 0.740, 0.749, 0.758, 0.768, 0.777, 0.786, 0.795, 0.803, 0.812, 0.820, 0.829, 0.837, 0.845, 0.853, 0.860, 0.868, 0.875, 0.882, 0.889, 0.896, 0.902, 0.909, 0.915, 0.921, 0.926, 0.932, 0.937, 0.942, 0.947, 0.952, 0.956, 0.961, 0.965, 0.969, 0.972, 0.976, 0.979, 0.982, 0.985, 0.988, 0.990, 0.992, 0.994, 0.996, 0.998, 1.000, 1.001, 1.002, 1.004, 1.004, 1.005, 1.006, 1.007, 1.007, 1.007, 1.008, 1.008, 1.008, 1.008, 1.008, 1.008, 1.008, 1.008, 1.007, 1.007, 1.007, 1.007, 1.006, 1.006, 1.006, 1.005, 1.005, 1.005, 1.004, 1.004, 1.004, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation UP
		 if(variation_index==1001){
			 float SF_temp[102] = { 
0.769, 0.777, 0.785, 0.793, 0.802, 0.810, 0.818, 0.826, 0.834, 0.841, 0.849, 0.857, 0.865, 0.872, 0.880, 0.887, 0.894, 0.901, 0.908, 0.915, 0.922, 0.929, 0.935, 0.942, 0.948, 0.954, 0.959, 0.965, 0.970, 0.975, 0.980, 0.984, 0.988, 0.993, 0.996, 1.000, 1.003, 1.006, 1.009, 1.012, 1.014, 1.016, 1.018, 1.020, 1.021, 1.023, 1.024, 1.025, 1.025, 1.026, 1.026, 1.026, 1.026, 1.026, 1.026, 1.026, 1.025, 1.025, 1.024, 1.024, 1.023, 1.022, 1.021, 1.020, 1.019, 1.018, 1.017, 1.016, 1.015, 1.014, 1.013, 1.012, 1.012, 1.011, 1.010, 1.009, 1.008, 1.007, 1.007, 1.006, 1.006, 1.005, 1.004, 1.004, 1.004, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! systematic variation DOWN
		 if(variation_index==1002){
			 float SF_temp[102] = { 
0.670, 0.681, 0.692, 0.703, 0.713, 0.724, 0.735, 0.745, 0.755, 0.765, 0.775, 0.785, 0.795, 0.804, 0.813, 0.821, 0.830, 0.838, 0.846, 0.854, 0.862, 0.869, 0.877, 0.884, 0.890, 0.896, 0.902, 0.907, 0.912, 0.917, 0.922, 0.926, 0.931, 0.935, 0.939, 0.943, 0.946, 0.950, 0.953, 0.957, 0.960, 0.963, 0.966, 0.969, 0.971, 0.974, 0.976, 0.978, 0.980, 0.982, 0.984, 0.986, 0.987, 0.989, 0.990, 0.992, 0.993, 0.994, 0.995, 0.996, 0.997, 0.997, 0.998, 0.999, 0.999, 1.000, 1.000, 1.000, 1.001, 1.001, 1.001, 1.001, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation UP
		 if(variation_index==1101){
			 float SF_temp[102] = { 
0.732, 0.740, 0.748, 0.756, 0.764, 0.772, 0.780, 0.788, 0.796, 0.803, 0.811, 0.818, 0.826, 0.833, 0.841, 0.848, 0.855, 0.862, 0.869, 0.876, 0.883, 0.890, 0.897, 0.903, 0.910, 0.916, 0.923, 0.929, 0.935, 0.941, 0.947, 0.952, 0.958, 0.963, 0.968, 0.972, 0.977, 0.981, 0.985, 0.988, 0.992, 0.995, 0.998, 1.001, 1.003, 1.005, 1.008, 1.009, 1.011, 1.012, 1.014, 1.015, 1.015, 1.016, 1.017, 1.017, 1.017, 1.017, 1.017, 1.017, 1.017, 1.017, 1.016, 1.016, 1.015, 1.015, 1.014, 1.013, 1.013, 1.012, 1.011, 1.011, 1.010, 1.009, 1.009, 1.008, 1.007, 1.007, 1.006, 1.006, 1.005, 1.005, 1.004, 1.004, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 //! statistical variation DOWN
		 if(variation_index==1102){
			 float SF_temp[102] = { 
0.651, 0.662, 0.674, 0.685, 0.696, 0.707, 0.718, 0.729, 0.739, 0.750, 0.760, 0.771, 0.781, 0.790, 0.800, 0.809, 0.818, 0.827, 0.836, 0.844, 0.852, 0.860, 0.867, 0.875, 0.881, 0.888, 0.894, 0.901, 0.906, 0.912, 0.918, 0.923, 0.928, 0.932, 0.937, 0.941, 0.946, 0.950, 0.953, 0.957, 0.960, 0.964, 0.967, 0.970, 0.973, 0.975, 0.978, 0.980, 0.982, 0.984, 0.986, 0.988, 0.989, 0.991, 0.992, 0.994, 0.995, 0.996, 0.997, 0.998, 0.998, 0.999, 1.000, 1.000, 1.001, 1.001, 1.001, 1.001, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000 
			  }; 
			 return SF_temp[i]; 
		  }; 
		 std::cout << "MET triger SF ERROR:   Unrecognized variation index! " << variation_index << std::endl; 
		 return 1.0; 
	 }; 
	  
	 std::cout << "MET triger SF ERROR:   Unrecognized run! " << run_number << std::endl; 
	 return 1.0; 
} 
